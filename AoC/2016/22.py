import sys
sample1=''''''

def readinput(intext):
    disks = {}
    for line in intext:
        x = (int)((line.split()[0]).split('-')[1][1:])
        y = (int)((line.split()[0]).split('-')[2][1:])
        size = (int)(line.split()[2][:-1])
        used = (int)(line.split()[3][:-1])
        disks[(x,y)] = [size, used]
    #print disks
    return disks

def printgrid(grid):
    maxx = 0
    maxy = 0
    for i in grid:
        if maxx < i[0]:
            maxx = i[0]
        if maxy < i[1]:
            maxy = i[1]        
    print maxx, maxy
    for y in range(maxy+1):
        for x in range(maxx+1):
            v = grid[(x,y)]
            if (x,y) == (maxx,0):
                print 'G',
            elif v[0] == 0:
                print '_',
            elif v[0] > 100:
                print '#',
            else:
                print '.',
            #print '%s/%s'%(v[0],v[1]+ v[0]),
        print ""
    #     sys.stdout.write('\n')
    # sys.stdout.flush()

def solve1(intext):
    disks = readinput(intext)
    total = 0
    for idisk in disks:
        data = disks[idisk][0]
        for jdisk in disks:
            if idisk != jdisk and data <= disks[jdisk][1] - disks[jdisk][0]:
                #print idisk, "data fits on", jdisk , "it has", data, "and there is avail", disks[jdisk][1] - disks[jdisk][0]
                total = total + 1
    return total




def solve2(intext):
    disks = readinput(intext)
    printgrid(disks)
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . G
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . # # # # # # # # # # # # #
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . _ . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # Output of printed grid
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 G
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 .
    # . . . . . . . . . . . . . . . . . . 0 1 2 3 4 5 6 7 8 9 0 1 2 .
    # . . . . . . . . . . . . . . . . . . 9 # # # # # # # # # # # # #
    # . . . . . . . . . . . . . . . . . . 8 7 6 5 4 3 2 . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . 1 . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . _ . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # 44 moves to get hole just left of top right (shortest path while avoiding the 4XX/5XX wall)
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . G _
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 1 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 0 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 8 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 6 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 5 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 4 .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3 .
    # . . . . . . . . . . . . . . . . . . 0 1 2 3 4 5 6 7 8 9 0 1 2 .
    # . . . . . . . . . . . . . . . . . . 9 # # # # # # # # # # # # #
    # . . . . . . . . . . . . . . . . . . 8 7 6 5 4 3 2 . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . 1 . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . _ . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # 1 move to move data to maxx-1                             1
    # 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 1 0 9 8 7 6 5 4 3 2 > G v
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ^ < <
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . # # # # # # # # # # # # #
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
    # 5 * 30 (moves to pull data left through hole * remaining X to get to 0)
    # 44 + 1 + (5*30) = 195


with open('inputs/22in.txt', 'r') as infile:
    tests = infile.read()

#tests = sample1
#print tests
tests = tests.split('\n')

#print solve1(tests)
print solve2(tests)
